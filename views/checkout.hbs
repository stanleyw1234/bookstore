<div class="row justify-content-md-center">
  <div class="col-6">
    <div class="text-center mt-40">
      <h1>
        Checkout â€” Stripe Press
      </h1>
      <h5 class="text-secondary">
        {{title}}
      </h5>
      <hr class="mt-40">
      <div class="mt-20 text-info">
        Total due: $<span class="amount" data-amount="{{amount}}"></span>
      </div>
    </div>
    <div class="card box-shadow mt-40">
      <div class="card-body">
        <form id="payment-form" name="payment-form" data-secret="{{client_secret}}">
          <div>
            <label for="email">Email address</label>
            <input type="email" class="form-control" id="email" name="email" placeholder="abc.test@hotmail.com">
          </div>
          <div id="payment-element" class="mt-20 text-center text-secondary border-placeholder">
            Add Stripe Element here!
          </div>
          <div class="mt-20">
            <button type="submit" class="btn btn-lg btn-block btn-primary">Pay $<span class="amount" data-amount="{{amount}}"></span></button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
window.addEventListener('DOMContentLoaded', async () => {
  const{publishable_key}= await fetch('/publishable_key').then(res=>res.json())
  console.log(publishable_key)
//initiate stripe
const stripe = Stripe(publishable_key);

// Create Stripe element
// refer to https://docs.stripe.com/payments/accept-a-payment?ui=elements
console.log('{{client_secret}}')
// Set up Stripe.js and Elements to use in checkout form, passing the client secret obtained in a previous step
const elements = stripe.elements({clientSecret: '{{client_secret}}'});

// Create and mount the Payment Element
const paymentElementOptions = { layout: 'accordion'};
const paymentElement = elements.create('payment', paymentElementOptions);
paymentElement.mount('#payment-element');


// submit element form
const form = document.getElementById('payment-form');

form.addEventListener('submit', async (event) => {
  event.preventDefault();

  const {error} = await stripe.confirmPayment({
    //`Elements` instance that was used to create the Payment Element
    elements,
    confirmParams: {
      return_url: `${window.location.origin}/success`,
    },
  });

  if (error) {
    // This point will only be reached if there is an immediate error when
    // confirming the payment. Show error to your customer (for example, payment
    // details incomplete)
    const messageContainer = document.querySelector('#error-message');
    messageContainer.textContent = error.message;
  } else {
    // Your customer will be redirected to your `return_url`. For some payment
    // methods like iDEAL, your customer will be redirected to an intermediate
    // site first to authorize the payment, then redirected to the `return_url`.
  }
});

})
</script>